version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: app
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    volumes:
      - ./src:/app
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    working_dir: /app
    networks:
      - network
    depends_on:
      - db
      - composer

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - ${NGINX_PORT}:80
      - ${NGINX_SSL_PORT}:443
    environment:
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
      SERVER_NAME: ${SERVER_NAME}
      APP_NAME: ${APP_NAME}
    volumes:
      - ./src:/app
      - ./docker/nginx/conf.d/:/etc/nginx/templates/
    networks:
      - network
    depends_on:
      - app

  #Database Service
  db:
    image: library/postgres:13.1-alpine
    container_name: db
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=postgres
      - POSTGRES_DB=stage
    volumes:
      - ./docker/postgresql/data:/var/lib/postgresql/data
    networks:
      - network

  composer:
    image: composer:2.0
    volumes:
      - ./src:/app
    working_dir: /app
    command: composer install

  redis:
    image: "redis:alpine"
    container_name: redis
    command: redis-server
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - network

  migrator:
    image: app
    command: [ "/app/wait-for-it.sh", "db:5432", "-t", "10", "--", "php", "/app/artisan", "migrate" ]
    volumes:
      - ./src:/app
    networks:
      - network
    depends_on:
      - composer
      - db

#Docker Networks
networks:
  network:
    driver: bridge
